
pipeline {
    agent any

    environment {
        ARTIFACT_NAME = "secure-flask-app.tar.gz"
        HASH_FILE = "hash.txt"
    }

    stages {
        stage('Checkout Code') {
            steps {
                script {
                    git branch: "dev",
                       url:  'https://github.com/sommygee/secure-flask-app.git'
                }
            }
        }

        stage('Set up Python Environment') {
            steps {
                sh '''
                python3 -m venv venv
                source venv/bin/activate
                pip install --upgrade pip
                pip install -r requirements.txt
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                source venv/bin/activate
                '''
            }
        }

        stage('Package Application') {
            steps {
                sh '''
                tar -czvf $ARTIFACT_NAME app.py requirements.txt templates/
                sha256sum $ARTIFACT_NAME | awk '{print $1}' > $HASH_FILE
                '''
            }
        }

        stage('Verify Artifact Integrity') {
            steps {
                sh '''
                CALCULATED_HASH=$(sha256sum $ARTIFACT_NAME | awk '{print $1}')
                EXPECTED_HASH=$(cat $HASH_FILE)
                
                if [ "$CALCULATED_HASH" != "$EXPECTED_HASH" ]; then
                    echo "❌ Artifact integrity verification failed!"
                    exit 1
                else
                    echo "✅ Artifact integrity verified!"
                fi
                '''
            }
        }

        stage('Deploy with Ansible') {
            steps {
                script {
                    sh '''
                    ansible-playbook -i hosts_inventory.ini roles/app_server/tasks/deploy.yml
                    '''
                }
            }
        }
    }

    post {
        failure {
            echo '❌ Build Failed! Check logs for issues.'
        }
    }
}
